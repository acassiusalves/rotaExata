
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAuthed() {
      return request.auth != null;
    }

    function isAppAdmin() {
      return isAuthed() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'vendedor'];
    }
    
    function isOwner(userId) {
      return isAuthed() && request.auth.uid == userId;
    }

    // AUTH USERS CAN READ/WRITE THEIR OWN USER DOCUMENT
    match /users/{userId} {
      allow read, update: if isOwner(userId);
      allow create, delete: if isAppAdmin();
    }
    
    // Admins can manage all users
    match /users/{userId} {
      allow list: if isAppAdmin();
    }

    // A COURIER CAN READ/WRITE TO ITS OWN DOCUMENT
    match /couriers/{courierId} {
      allow read, update: if isOwner(courierId);
      allow create: if isAppAdmin();
    }

    // A COURIER CAN READ/WRITE TO ITS OWN TOKEN SUBCOLLECTION
    match /couriers/{courierId}/tokens/{tokenId} {
      allow read, write: if isOwner(courierId);
    }
    
    // RULES FOR ROUTES
    match /routes/{routeId} {
      // Admins can do anything
      allow create, delete, read, list: if isAppAdmin();
      // Drivers can only read routes assigned to them
      allow read: if isAuthed() && resource.data.driverId == request.auth.uid;
      // Drivers can update their assigned routes (e.g., change status)
      allow update: if isAuthed() && resource.data.driverId == request.auth.uid;
    }
  }
}
